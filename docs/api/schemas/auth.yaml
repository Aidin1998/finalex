RegisterRequest:
  type: object
  properties:
    email:
      type: string
      format: email
      maxLength: 254
      example: "user@example.com"
    username:
      type: string
      minLength: 3
      maxLength: 30
      pattern: '^[a-zA-Z0-9_]+$'
      example: "johndoe123"
    password:
      type: string
      minLength: 8
      maxLength: 128
      example: "SecurePassword123!"
    first_name:
      type: string
      minLength: 1
      maxLength: 50
      example: "John"
    last_name:
      type: string
      minLength: 1
      maxLength: 50
      example: "Doe"
    terms_accepted:
      type: boolean
      example: true
    marketing_consent:
      type: boolean
      example: false
  required:
    - email
    - username
    - password
    - first_name
    - last_name
    - terms_accepted

RegisterResponse:
  type: object
  properties:
    user:
      $ref: '#/UserProfile'
    verification_required:
      type: boolean
      example: true
    verification_method:
      type: string
      enum: [email, sms]
      example: "email"
  required:
    - user
    - verification_required

LoginRequest:
  type: object
  properties:
    identifier:
      type: string
      description: Email or username
      example: "user@example.com"
    password:
      type: string
      example: "SecurePassword123!"
    remember_me:
      type: boolean
      default: false
    device_info:
      type: object
      properties:
        fingerprint:
          type: string
        user_agent:
          type: string
        ip_address:
          type: string
  required:
    - identifier
    - password

LoginResponse:
  type: object
  properties:
    access_token:
      type: string
      description: JWT access token
      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    refresh_token:
      type: string
      description: Refresh token for obtaining new access tokens
    token_type:
      type: string
      enum: [Bearer]
      example: "Bearer"
    expires_in:
      type: integer
      description: Token expiration time in seconds
      example: 3600
    user:
      $ref: '#/UserProfile'
    requires_mfa:
      type: boolean
      example: false
    mfa_token:
      type: string
      description: Temporary token for MFA verification (if required)
  required:
    - access_token
    - refresh_token
    - token_type
    - expires_in
    - user

RefreshRequest:
  type: object
  properties:
    refresh_token:
      type: string
      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
  required:
    - refresh_token

TokenResponse:
  type: object
  properties:
    access_token:
      type: string
      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    refresh_token:
      type: string
    token_type:
      type: string
      enum: [Bearer]
      example: "Bearer"
    expires_in:
      type: integer
      example: 3600
  required:
    - access_token
    - refresh_token
    - token_type
    - expires_in

UserProfile:
  type: object
  properties:
    id:
      $ref: '../schemas/common.yaml#/UUID'
    email:
      type: string
      format: email
      example: "user@example.com"
    username:
      type: string
      example: "johndoe123"
    first_name:
      type: string
      example: "John"
    last_name:
      type: string
      example: "Doe"
    kyc_status:
      type: string
      enum: [pending, approved, rejected, expired]
      example: "approved"
    kyc_level:
      type: string
      enum: [none, basic, intermediate, advanced]
      example: "intermediate"
    tier:
      type: string
      enum: [basic, premium, vip]
      example: "premium"
    mfa_enabled:
      type: boolean
      example: true
    email_verified:
      type: boolean
      example: true
    phone_verified:
      type: boolean
      example: false
    created_at:
      $ref: '../schemas/common.yaml#/Timestamp'
    last_login:
      $ref: '../schemas/common.yaml#/Timestamp'
    status:
      type: string
      enum: [active, suspended, locked, pending_verification]
      example: "active"
    trading_permissions:
      type: object
      properties:
        spot_trading:
          type: boolean
        margin_trading:
          type: boolean
        futures_trading:
          type: boolean
        options_trading:
          type: boolean
        withdrawal_enabled:
          type: boolean
        deposit_enabled:
          type: boolean
  required:
    - id
    - email
    - username
    - first_name
    - last_name
    - kyc_status
    - tier
    - mfa_enabled
    - created_at

UpdateProfileRequest:
  type: object
  properties:
    first_name:
      type: string
      minLength: 1
      maxLength: 50
    last_name:
      type: string
      minLength: 1
      maxLength: 50
    phone:
      type: string
      pattern: '^\+[1-9]\d{1,14}$'
    date_of_birth:
      type: string
      format: date
    address:
      $ref: '../schemas/common.yaml#/Address'
    timezone:
      type: string
      example: "America/New_York"
    language:
      type: string
      pattern: '^[a-z]{2}(-[A-Z]{2})?$'
      example: "en-US"
    notification_preferences:
      type: object
      properties:
        email_notifications:
          type: boolean
        sms_notifications:
          type: boolean
        push_notifications:
          type: boolean
        marketing_emails:
          type: boolean

Enable2FARequest:
  type: object
  properties:
    method:
      type: string
      enum: [totp, sms]
      example: "totp"
    phone:
      type: string
      pattern: '^\+[1-9]\d{1,14}$'
      description: Required for SMS method
  required:
    - method

Enable2FAResponse:
  type: object
  properties:
    method:
      type: string
      enum: [totp, sms]
    secret:
      type: string
      description: TOTP secret key (for TOTP method)
    qr_code:
      type: string
      description: Base64 encoded QR code image (for TOTP method)
    backup_codes:
      type: array
      items:
        type: string
      description: One-time backup codes
  required:
    - method

Verify2FARequest:
  type: object
  properties:
    code:
      type: string
      pattern: '^[0-9]{6}$'
      example: "123456"
    backup_code:
      type: string
      description: Use backup code instead of TOTP/SMS code
  oneOf:
    - required: [code]
    - required: [backup_code]

Disable2FARequest:
  type: object
  properties:
    password:
      type: string
      description: Current password for verification
    code:
      type: string
      pattern: '^[0-9]{6}$'
      description: Current 2FA code
  required:
    - password
    - code

KYCSubmissionRequest:
  type: object
  properties:
    document_type:
      type: string
      enum: [passport, drivers_license, national_id]
    document_number:
      type: string
      maxLength: 50
    document_country:
      type: string
      pattern: '^[A-Z]{2}$'
    document_expiry:
      type: string
      format: date
    document_front:
      type: string
      format: binary
      description: Front side of document image
    document_back:
      type: string
      format: binary
      description: Back side of document image (if applicable)
    selfie:
      type: string
      format: binary
      description: Selfie photo for identity verification
    address_proof:
      type: string
      format: binary
      description: Proof of address document
    personal_info:
      type: object
      properties:
        full_name:
          type: string
        date_of_birth:
          type: string
          format: date
        nationality:
          type: string
          pattern: '^[A-Z]{2}$'
        occupation:
          type: string
        income_source:
          type: string
          enum: [employment, business, investment, inheritance, other]
        address:
          $ref: '../schemas/common.yaml#/Address'
  required:
    - document_type
    - document_number
    - document_country
    - document_front
    - selfie
    - personal_info

KYCSubmissionResponse:
  type: object
  properties:
    submission_id:
      $ref: '../schemas/common.yaml#/UUID'
    status:
      type: string
      enum: [submitted, under_review, approved, rejected]
    estimated_processing_time:
      type: string
      example: "1-3 business days"
    required_documents:
      type: array
      items:
        type: string
    submitted_at:
      $ref: '../schemas/common.yaml#/Timestamp'
  required:
    - submission_id
    - status
    - submitted_at

KYCStatusResponse:
  type: object
  properties:
    status:
      type: string
      enum: [none, pending, under_review, approved, rejected, expired]
    level:
      type: string
      enum: [none, basic, intermediate, advanced]
    submitted_at:
      $ref: '../schemas/common.yaml#/Timestamp'
    reviewed_at:
      $ref: '../schemas/common.yaml#/Timestamp'
    expires_at:
      $ref: '../schemas/common.yaml#/Timestamp'
    rejection_reason:
      type: string
      description: Reason for rejection (if applicable)
    required_documents:
      type: array
      items:
        type: string
      description: Documents required for next level
    limits:
      type: object
      properties:
        daily_withdrawal_limit:
          $ref: '../schemas/common.yaml#/Decimal'
        monthly_withdrawal_limit:
          $ref: '../schemas/common.yaml#/Decimal'
        trading_limit:
          $ref: '../schemas/common.yaml#/Decimal'
  required:
    - status
    - level
